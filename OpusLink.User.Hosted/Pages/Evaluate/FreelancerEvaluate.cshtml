@page
@using OpusLink.Entity.DTO.FeedbackDTOs
@using OpusLink.Shared.Enums;
@using OpusLink.Shared.Constants
@inject IHttpContextAccessor HttpContextAccessor;
@model OpusLink.User.Hosted.Pages.Evaluate.FreelancerEvaluateModel
@* <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>  *@
@{
	FeebackDTO item = Model.feedbackDTOs;
}
@{
	int userId = HttpContextAccessor.HttpContext.Session.GetInt32("UserId") ?? -1;


}
<div class="container-eva">
	@* <div class="header">
	<div class="logo">Opuslink</div>
	<div class="chat">
	<img src="https://cdn.builder.io/api/v1/image/assets/TEMP/412c2e66651b01c951b336ec271764f605885f0cfb40bc677f26eaf5bbb8f67d?" class="chat-icon" loading="lazy" />
	</div>
	</div> *@
	<h1>Đánh giá nhà tuyển dụng</h1>
	<div class="Employer-item">
		<img src="https://bootdey.com/img/Content/avatar/avatar4.png" class="rounded-circle mr-1" alt="" width="80" height="80">
		<h3>EmployerName</h3>
	</div>

	<div class="evaluation">
		<div class="danh-gia">
			<h5>Uy tín</h5>
			<div class="star-rating-1" data-rating-1="0">
				<span class="star" data-value="1">&#9733;</span>
				<span class="star" data-value="2">&#9733;</span>
				<span class="star" data-value="3">&#9733;</span>
				<span class="star" data-value="4">&#9733;</span>
				<span class="star" data-value="5">&#9733;</span>
			</div>
		</div>


		<h5>Giá cả</h5>
		<div class="star-rating-2" data-rating-2="0">
			<span class="star" data-value="1">&#9733;</span>
			<span class="star" data-value="2">&#9733;</span>
			<span class="star" data-value="3">&#9733;</span>
			<span class="star" data-value="4">&#9733;</span>
			<span class="star" data-value="5">&#9733;</span>
		</div>
		<h5>Thời gian</h5>
		<div class="star-rating-3" data-rating-3="0">
			<span class="star" data-value="1">&#9733;</span>
			<span class="star" data-value="2">&#9733;</span>
			<span class="star" data-value="3">&#9733;</span>
			<span class="star" data-value="4">&#9733;</span>
			<span class="star" data-value="5">&#9733;</span>
		</div>
		<h5>Giao tiếp</h5>
		<div class="star-rating-4" data-rating-4="0">
			<span class="star" data-value="1">&#9733;</span>
			<span class="star" data-value="2">&#9733;</span>
			<span class="star" data-value="3">&#9733;</span>
			<span class="star" data-value="4">&#9733;</span>
			<span class="star" data-value="5">&#9733;</span>
		</div>
		@* <div class="star-rating-5" data-rating-5="0">
		<span class="star" data-value="1">&#9733;</span>
		<span class="star" data-value="2">&#9733;</span>
		<span class="star" data-value="3">&#9733;</span>
		<span class="star" data-value="4">&#9733;</span>
		<span class="star" data-value="5">&#9733;</span>
		</div> *@
		<h5>Nhận xét</h5>
		<textarea id="content" name="content" rows="3" cols="100" placeholder="Viết nhận xét..."></textarea>

		<div class="description">
			Đánh giá của bạn sẽ giúp chúng tôi tìm ra những nhà tuyển dụng uy tín và nâng cao chất lượng các công việc được đăng.
		</div>
		<button type="submit" class="btn-submit" id="btn-submit">Gửi đánh giá</button>
	</div>
	<!-- Other evaluation components here -->




</div>


<style>
	.Employer-item {
		display: flex;
		align-items: center; /* Canh dọc các phần tử vào giữa */
		margin: 30px 0px;
	}

	h3 {
		margin-left: 20px;
	}



	h1 {
		text-align: center;
	}


	.container-eva {
		margin: 20px 300px;
		border: 1px solid #000;
		background-color: #fff;
		display: flex;
		flex-direction: column;
		padding-bottom: 50px;
	}

	.header {
		border-bottom: 1px solid #4b32e8;
		background-color: #f0edff;
		display: flex;
		justify-content: space-between;
		gap: 20px;
		padding: 14px 42px;
		text-transform: uppercase;
	}

	.star-rating-1, .star-rating-2, .star-rating-3, .star-rating-4 {
		font-size: 0; /* Hide the text node */
		cursor: pointer;
	}

	.star {
		font-size: 24px; /* Adjust size as needed */
		color: #ccc;
	}

		.star.checked {
			color: #ffcc00; /* Change color for checked stars */
		}

	.btn-submit {
		border: 1px solid #4ce149;
		background-color: #fff;
		border-radius: 8px;
		color: #4ce149;
		cursor: pointer;
		text-align: center; /* căn giữa nội dung */
		display: block; /* nút chiếm toàn bộ chiều ngang của container */
		margin: 0 auto; /* căn giữa theo chiều ngang */
		text-transform: uppercase;
		padding: 15px 19px;
		font: 600 16px/1 Poppins, sans-serif;
		margin-top: 30px;
	}

		.btn-submit:hover {
			background-color: #4ce149;
			color: #fff;
		}

	.description {
		margin: 20px 0px 20px 20px;
		font-size: 20px;
		font-style: italic;
	}

	body {
		background-color: #eef3f4;
	}

</style>

<script>

	document.addEventListener('DOMContentLoaded', function () {
		let arrRate = 0;
		let rate1 = 0
		let rate2 = 0
		let rate3 = 0
		let rate4 = 0


		// hàm xử lý rate 1
		const stars1 = document.querySelectorAll('.star-rating-1 .star');
		stars1.forEach(function (star1) {
			star1.addEventListener('click', function () {
				const rating = parseInt(this.getAttribute('data-value'));

				stars1.forEach(function (s, index) {
					if (index < rating) {
						s.classList.add('checked');
					} else {
						s.classList.remove('checked');
					}
				});

				document.querySelector('.star-rating-1').setAttribute('data-rating-1', rating);
				rate1 = rating
			});
		});

		// hàm xử lý rate 2
		const stars2 = document.querySelectorAll('.star-rating-2 .star');
		stars2.forEach(function (star2) {
			star2.addEventListener('click', function () {
				const rating = parseInt(this.getAttribute('data-value'));

				stars2.forEach(function (s, index) {
					if (index < rating) {
						s.classList.add('checked');
					} else {
						s.classList.remove('checked');
					}
				});

				// handleClickStart(stars2, rating)

				document.querySelector('.star-rating-2').setAttribute('data-rating-2', rating);
				rate2 = rating
			});
		});

		// hàm xử lý rate 3.1
		const stars3 = document.querySelectorAll('.star-rating-3 .star');
		stars3.forEach(function (star) {
			star.addEventListener('click', function () {
				const rating = parseInt(this.getAttribute('data-value'));

				stars3.forEach(function (s, index) {
					if (index < rating) {
						s.classList.add('checked');
					} else {
						s.classList.remove('checked');
					}
				});

				// handleClickStart(stars2, rating)

				document.querySelector('.star-rating-3').setAttribute('data-rating-3', rating);
				rate3 = rating
			});
		});

		// // hàm xử lý rate 4
		const stars4 = document.querySelectorAll('.star-rating-4 .star');
		stars4.forEach(function (star4) {
			star4.addEventListener('click', function () {
				const rating = parseInt(this.getAttribute('data-value'));

				stars4.forEach(function (s, index) {
					if (index < rating) {
						s.classList.add('checked');
					} else {
						s.classList.remove('checked');
					}
				});

				document.querySelector('.star-rating-4').setAttribute('data-rating-4', rating);
				rate4 = rating
			});
		});



		// khi submit
		// const btnSubmit = document.getElementById('btn-submit');
		// btnSubmit.addEventListener('click', function () {
		// 	console.log("arr rate: ", rate1, rate2, rate3, rate4)
		// 	arrRate = (rate1 + rate2 + rate3 + rate4 ) / 4

		// 	// call api
		// 	console.log("rate total: ", arrRate)
		// });
		function calculateAverageRating() {
			arrRate = (rate1 + rate2 + rate3 + rate4) / 4;
		}

		// Function to send feedback data to the server
		async function sendFeedbackData() {
			calculateAverageRating();

			const content = document.getElementById('content').value;

			const feedbackData = {
				JobId: 250 /* Get JobId from your page */,
				CreateByUserID: 201 /* Get CreateByUserID from your page */,
				TargetToUserID: 40 /* Get TargetToUserID from your page */,
				Star: arrRate,
				Content: content
			};

			try {
				const response = await fetch(@UrlConstant.ApiBaseUrl+'/Feedback/AddFeedback', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
						"ngrok-skip-browser-warning": true,
						"Authorization": "Bearer " + "@(HttpContextAccessor.HttpContext.Session.GetString("token"))",
					},

					body: JSON.stringify(feedbackData)
				});

				if (response.ok) {
					// Feedback successfully submitted
					console.log('Feedback submitted successfully');
					alert('Feedback submitted successfully');
					//reload page
					location.reload();
				} else {
					// Handle error response
					console.error('Failed to submit feedback');
					alert('Failed to submit feedback');
				}
			} catch (error) {
				console.error('Error submitting feedback:', error);
			}
		}

		// Event listeners for rating stars
		// Add your existing event listeners here

		// Event listener for the submit button
		const btnSubmit = document.getElementById('btn-submit');
		btnSubmit.addEventListener('click', function () {
			sendFeedbackData();
		});

	});

</script>


