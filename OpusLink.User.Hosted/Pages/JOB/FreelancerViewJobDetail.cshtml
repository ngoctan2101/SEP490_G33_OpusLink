@page
@using OpusLink.Entity.DTO.JobDTO;
@using OpusLink.Entity.Models;
@using OpusLink.Shared.Enums;
@model OpusLink.User.Hosted.Pages.JOB.FreelancerViewJobDetailModel
@{
    GetJobDetailResponse item = Model.job;
}
@{
    ViewData["Title"] = "Freelancer View Job Detail";
}
<style>

    .link {
        text-decoration: none;
        font-weight: bold;
    }

        .link:hover {
            cursor: pointer;
        }

    .status {
        font-weight: bold;
        color: white;
        text-align: center;
        display: inline-block;
    }

    .category {
        display: inline-block;
        margin-bottom: 3px;
        background-color: lightblue;
        padding: 7px;
        border-radius: 5px;
        font-size: 14px;
    }

    .categoryFake {
        display: inline-block;
        margin-bottom: 3px;
        background-color: lightblue;
        padding: 7px;
        border-radius: 5px;
        font-size: 14px;
        opacity: 0.6;
    }

        .categoryFake:hover {
            cursor: pointer;
        }

    .skill {
        display: inline-block;
        margin-bottom: 3px;
        background-color: lightblue;
        padding: 7px;
        border-radius: 5px;
        font-size: 14px;
    }

    .skillFake {
        display: inline-block;
        margin-bottom: 3px;
        background-color: lightblue;
        padding: 7px;
        border-radius: 5px;
        font-size: 14px;
        opacity: 0.6;
    }

        .skillFake:hover {
            cursor: pointer;
        }
</style>
<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <a href="../JOB/FreelancerViewAllJobPage">Back to list</a>
        <div class="row">
            <div class="col-md-3" style="margin-bottom:10px">
                @{
                    if (item.EmployerImageBytes != null && item.EmployerImageBytes.Length > 0)
                    {
                        var base64Image = Convert.ToBase64String(item.EmployerImageBytes);
                        var imgSrc = $"data:image/png;base64,{base64Image}";
                        <img id="profileImage" src="@imgSrc" style="width:50%;height:auto;display:block" />
                    }
                    else
                    {
                        <img id="profileImage" src="/imgExample/default.png" style="width:50%;height:auto;display:block" />
                    }
                }
                <a href="#" class="link" style="display:block">@item.EmployerName</a>
                ⭐⭐⭐⭐⭐
                <p>Project Information:</p>
                <table style="width:100%;font-size:13px">
                    <tr><td>Project Id:</td><td>@item.JobId</td></tr>
                    <tr><td style="width:100px">Posted Date:</td><td>@item.DateCreated.ToString("dd/MM/yyyy")</td></tr>
                    <tr><td>Budget:</td><td>@Math.Round(item.BudgetMin,0).ToString("#,##") VND<span style="display:inline-block"> - </span>@Math.Round(item.BudgetMax,0).ToString("#,##") VND</td></tr>
                    <tr><td>Location:</td><td>@item.Location</td></tr>
                </table>

            </div>
            <div class="col-md-9">
                <div>
                    <p style="font-weight:bold;display:inline-block">@item.JobTitle</p>
                    @if (item.Status == (int)JobStatusEnum.NotApprove)
                    {
                        <p class="status" style="background-color:grey;margin:0px">Not Approved</p>
                    }
                    else if (item.Status == (int)JobStatusEnum.Approved)
                    {
                        <p class="status" style="background-color:#5B9044;margin:0px">Hiring</p>
                    }
                    else if (item.Status == (int)JobStatusEnum.Hired)
                    {
                        <p class="status" style="background-color:orange;margin:0px">Hired</p>
                    }
                    else if (item.Status == (int)JobStatusEnum.Close)
                    {
                        <p class="status" style="background-color:#FF0000;margin:0px">Closed</p>
                    }
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <p style="display:inline-block">Categories: </p>
                    </div>
                    <div class="col-md-10">
                        @if (item.Categories.Count > 4)
                        {
                            for (int i = 0; i < 4; i++)
                            {
                                <div class="category">@item.Categories.ElementAt(i).CategoryName</div>
                            }
                            <div name="hidden_fake_category_@item.JobId" class="categoryFake" onclick="DisplayAllCategory('@item.JobId')">. . .</div>
                            for (int i = 4; i < item.Categories.Count; i++)
                            {
                                <div name="hidden_category_@item.JobId" class="category" style="display: none;">@item.Categories.ElementAt(i).CategoryName</div>
                            }
                        }
                        else
                        {
                            foreach (GetCategoryResponse category in item.Categories)
                            {
                                <div class="category">@category.CategoryName</div>
                            }
                        }
                    </div>
                </div>
                @*<p style="white-space: pre-line">@Html.Raw(item.JobContent.Replace("\r\n", "&#10;"))</p>*@
                <p style="white-space: pre-line;margin-top:10px">@item.JobContent</p>
                <div class="row">
                    <div class="col-md-4">Submit offer: @item.TotalOffer</div>
                    <div class="col-md-4">Average: @Math.Round(item.AverageCost,0).ToString("#,##") VND</div>
                    <div class="col-md-4">Average time: @item.AverageTime days</div>
                </div>
            </div>
        </div>
        @{
            int aa = 0;
        string b = DateTime.Now.ToString(), e = "", f = "";
            int c = 0;
            if (Model.isOffered)
            {
                aa = Model.offerResponse.OfferID ;
                b = "value=\"" + Model.offerResponse.DateOffer + "\"";
                c = (int)Model.offerResponse.ProposedCost;
                e = Model.offerResponse.SelfIntroduction;
                f = Model.offerResponse.EstimatedPlan;
            }
        }
        <form method="post" style="border:2px dashed black;padding:10px;width:100%">
            <div class="row">
                <div class="col-md-4">
                    <input type="number" name="offerId" value="@aa" hidden />
                    <input type="number" name="jobId" value="@Model.job.JobId" hidden />
                    <input type="number" name="dateOffer" @b hidden />
                    <label style="font-weight:bold;font-size:20px;display:block">Proposed cost<span style="color:red">*</span></label>
                    <input type="text" id="proposedCost" name="proposedCost" placeholder="5,000,000 VND" value="@c" required />
                    <label style="font-weight:bold;font-size:20px;display:block">Expected days<span style="color:red">*</span></label>
                    <select name="expectedDays" style="width:100%">
                        @for (int i = 1; i < 101; i++)
                        {
                            if (i == Model.offerResponse.ExpectedDays)
                            {
                                <option value="@i" selected>@(i) day</option>
                            }
                            else if (i == 1)
                            {
                                <option value="@(i*2)">@(i * 2) day</option>
                            }
                            else
                            {
                                <option value="@(i*2)">@(i * 2) days</option>
                            }

                        }
                    </select>
                    @if (Model.isOffered)
                    {
                        <button type="submit" asp-page-handler="ForUpdate" style="margin-top:15px;width:80%;background-color:green;color:white;font-weight:bold;font-size:30px;border:none">Edit Offer</button>
                    }
                    else
                    {

                        <button type="submit" asp-page-handler="ForAdd" style="margin-top:15px;width:80%;background-color:#FF9900;color:white;font-weight:bold;font-size:30px;border:none">Submit</button>

                    }

                </div>
                <div class="col-md-8">
                    <div>
                        <label for="selfIntroduction" style="font-weight:bold;font-size:20px;display:block">Self introduction<span style="color:red">*</span></label>
                        <textarea rows="7" style="width:100%" name="selfIntroduction" placeholder="As a software engineer with a focus on ...&#10;I'm dedicated to ..." required>@e</textarea>
                    </div>
                    <div>
                        <label for="estimatedPlan" style="font-weight:bold;font-size:20px;display:block">Estimated plan<span style="color:red">*</span></label>
                        <textarea rows="7" style="width:100%" name="estimatedPlan" placeholder="First, we will focus on ... by create a ...&#10;Then, use ... to create a ...&#10;Perform test to ensure ..." required>@f</textarea>
                    </div>


                </div>
            </div>
        </form>
        <p style="width:100%;text-align:center;color:#4A86E8;font-size:30px">Offers:</p>
        <div>
            @foreach (var a in Model.offers)
            {
                <div class="row" style="margin-bottom:30px;border:2px solid black">
                    <div class="col-md-3">
                        <table>
                            <tr>
                                <td rowspan="2">
                                    @{
                                        if (a.FreelancerImageBytes != null && a.FreelancerImageBytes.Length > 0)
                                        {
                                            var base64Image = Convert.ToBase64String(a.FreelancerImageBytes);
                                            var imgSrc = $"data:image/png;base64,{base64Image}";
                                            <img id="profileImage_@a.OfferID" src="@imgSrc" style="width:80%;height:auto;display:block" />
                                        }
                                        else
                                        {
                                            <img id="profileImage" src="/imgExample/default.png" style="width:80%;height:auto;display:block" />
                                        }
                                    }
                                </td>
                                <td>
                                    <a href="#" class="link">@a.FreelancerName</a>
                                </td>
                            </tr>
                            <tr><td>⭐⭐⭐⭐⭐</td></tr>
                        </table>
                        <div>
                            @if (a.Skills.Count > 3)
                            {
                                for (int i = 0; i < 3; i++)
                                {
                                    <div class="skill">@a.Skills.ElementAt(i)</div>
                                }
                                <div name="hidden_fake_skill_@a.OfferID" class="skillFake" onclick="DisplayAllSkill('@a.OfferID')">. . .</div>
                                for (int i = 3; i < a.Skills.Count; i++)
                                {
                                    <div name="hidden_skill_@a.OfferID" class="skill" style="display: none;">@a.Skills.ElementAt(i)</div>
                                }
                            }
                            else
                            {
                                foreach (string skill in a.Skills)
                                {
                                    <div class="skill">@skill</div>
                                }
                            }
                        </div>
                        <p>Job Done: @a.NumberOfJobDone</p>
                        <button type="button">Message</button>
                    </div>
                    <div class="col-md-9" style="border-left:2px solid black">
                        <p><span style="font-weight:bold">Time:</span> @a.DateOffer.ToString("dd/MM/yyyy")</p>
                        <p><span style="font-weight:bold">Proposed Cost:</span> @a.ProposedCost.ToString("#,##") đ</p>
                        <p><span style="font-weight:bold">Expected Days:</span> @a.ExpectedDays days</p>
                        <p><span style="font-weight:bold">Self Introduction:</span> @a.SelfIntroduction</p>
                        <p><span style="font-weight:bold">Estimated Plan:</span> @a.EstimatedPlan</p>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="col-md-2"></div>
</div>
<script>
    document.getElementById("proposedCost").addEventListener('change', function () {
        // Get the input element
        var input = document.getElementById("proposedCost");
        var input1 = input.value.replace(/[^0-9]/g, "");

        // Get the value and convert it to a number
        var value = parseFloat(input1);
        // Check if the value is a valid number
        if (!isNaN(value)) {
            // Format the number with dots for thousands separator
            var formattedValue = value.toLocaleString('en', { maximumFractionDigits: 0 }) + " VND";

            // Update the input field with the formatted value
            input.value = formattedValue;
        }
    }, false);
</script>
<script>
    function DisplayAllCategory(JobID) {
        document.getElementsByName('hidden_fake_category_' + JobID)[0].style.display = "none";
        var hiddenCategory = document.getElementsByName('hidden_category_' + JobID);
        hiddenCategory.forEach(function (hiddenCategory) {
            hiddenCategory.style.display = "inline-block";
        })

    }
    function DisplayAllSkill(OfferID) {
        document.getElementsByName('hidden_fake_skill_' + OfferID)[0].style.display = "none";
        var hiddenSkill = document.getElementsByName('hidden_skill_' + OfferID);
        hiddenSkill.forEach(function (hiddenSkill) {
            hiddenSkill.style.display = "inline-block";
        })
    }
    window.onload = function () {
        // Get the input element
        var input = document.getElementById("proposedCost");
        var input1 = input.value.replace(/[^0-9]/g, "");

        // Get the value and convert it to a number
        var value = parseFloat(input1);
        // Check if the value is a valid number
        if (!isNaN(value)) {
            // Format the number with dots for thousands separator
            var formattedValue = value.toLocaleString('en', { maximumFractionDigits: 0 }) + " VND";

            // Update the input field with the formatted value
            input.value = formattedValue;
        }
    };
</script>
