@page
@using OpusLink.Entity.Models;
@using OpusLink.Entity.Models.JOB;
@using OpusLink.Shared.Enums;
@model OpusLink.Admin.Hosted.Pages.JOB.AdminViewAllJobPageModel
@{
}
@{
    ViewData["Title"] = "Admin View All Job";
}
<style>

    .jobTable tr {
        border-collapse: collapse;
        border: 1px solid black;
    }

    .jobTable th, td {
        padding-left:7px;
    }
    .link{
        text-decoration: none;
        font-weight: bold;
    }

    .link2 {
        text-decoration: none;
        font-weight: bold;
        padding-right:8px;
    }

    .link2:hover{
        cursor: pointer;
    }
    
    .status{
        font-weight: bold;
        color: white;
        text-align: center;
    }
    .category {
        display: inline-block; 
        margin-bottom: 3px; 
        background-color: lightblue;
        padding: 7px;
        border-radius:5px
    }

</style>
<div class="row" style="margin-bottom:15px">
    <div class="col-md-3">
        <input type="submit" value="Search & Filter" style="width:100%" />
    </div>
    <div class="col-md-7">
        <input asp-for="filter.SearchStr" style="width:100%" placeholder="Find Job" />
    </div>
    <div class="col-md-2">
    </div>
</div>
<div class="row">
    <div class="col-md-3">
        <table style="width:100%;border:1px solid black;padding:4px;margin-bottom:10px">
            <tr>
                <td colspan="3"><h6>Category</h6></td>
            </tr>
            @foreach(var category in Model.Categories)
            {
                <tr id="tr_@category.CategoryID" style="width:100%">
                    <td style="text-align:right"><input type="checkbox" name="checkbox_@category.CategoryID" value="@category.CategoryID"></td>
                    <td style="text-align:left">@(category.CategoryName + " (" + category.NumberOfJob + ")")</td>
                    <td style="text-align:right">
                        @if (category.HasChildCategory)
                    {
                            <a id="tr_link_@category.CategoryID" onclick="displayAllChild(@category.CategoryID)" class="link2">V</a>
                    }</td>
                </tr>
            }
        </table>
        <table style="width:100%;border:1px solid black;padding:4px;margin-bottom:10px">
            <tr>
                <td colspan="2"><h6>Status</h6></td>
            </tr>
            @foreach (var status in Enum.GetValues(typeof(JobStatusEnum)))
            {
                <tr style="width:100%">
                    <td style="width:15%;text-align:right"><input type="checkbox" name="checkbox_@status.ToString()" value="@status.ToString()"></td>
                    <td style="width:85%;text-align:left">@status.ToString()</td>
                </tr>
            }
        </table>
        <table style="width:100%;border:1px solid black;padding:4px;margin-bottom:10px">
            <tr>
                <td colspan="1"><h6>Date Range</h6></td>
            </tr>
            <tr>
                <td>
                    <input type="text" name="daterange" value="01/01/2024 - 02/15/2024" />
                </td>
            </tr>
        </table>
        <table style="width:100%;border:1px solid black;padding:4px;margin-bottom:10px">
            <tr>
                <td colspan="3"><h6>Price Range</h6></td>
            </tr>
            <tr>
                <td>
                    <div class="price-input">
                        <table>
                            <tr>
                                <td><input type="text" id="price-min" pattern="[0-9đ ,]+" title="Please enter number" value="250,000 đ" style="width:100% " /></td>
                                <td>-</td>
                                <td><input type="text" id="price-max" pattern="[0-9đ ,]+" title="Please enter number" value="8,000,000 đ" style="width:100% " /></td>
                            </tr>
                        </table>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <div class="col-md-9">
        <table class="jobTable">
            <thead>
                <tr>
                    <th width="4%">
                        <h5>Id</h5>
                    </th>
                    <th width="15%">
                        <h5>Title</h5>
                    </th>
                    <th width="12%">
                        <h5>Budget range</h5>
                    </th>
                    <th width="4%">
                        <h5>Status</h5>
                    </th>
                    <th width="17%">
                        <h5>Categories</h5>
                    </th>
                    <th width="5%">
                        <h5>Offers</h5>
                    </th>
                    <th width="5%"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Jobs)
                {
                    <tr>
                        <td style="text-align: center;">
                            @item.JobID
                        </td>
                        <td>
                            <a class="link" asp-page="./AdminViewDetailJobPage/" asp-route-id="@item.JobID">@item.JobTitle</a>
                        </td>
                        <td>
                            @((item.BudgetFrom ?? 0).ToString("#,##") + " - " + (item.BudgetTo ?? 0).ToString("#,##"))
                        </td>
                        <td style="text-align: center">
                            @if (item.Status == (int)JobStatusEnum.NotApprove)
                            {
                                <p class="status" style="background-color:grey;margin:0px">Not Approved</p>
                            }
                            else if (item.Status == (int)JobStatusEnum.Approved)
                            {
                                <p class="status" style="background-color:#5B9044;margin:0px">Hiring</p>
                            }
                            else if (item.Status == (int)JobStatusEnum.Hired)
                            {
                                <p class="status" style="background-color:orange;margin:0px">Hired</p>
                            }
                            else if (item.Status == (int)JobStatusEnum.Close)
                            {
                                <p class="status" style="background-color:#FF0000;margin:0px">Closed</p>
                            }
                        </td>
                        <td>
                            <div class="container" style="padding:5px">
                                @foreach(GetCategoryResponse category in item.Categoies)
                                {
                                    <div class="category">@category.CategoryName</div>
                                }
                            </div>
                        </td>
                        <td>
                            @(item.NumberOfOffer+" / "+ "20")
                        </td>
                        <td>
                            <a class="link" style="background-color:cornflowerblue;color:white;display:block;margin:3px;text-align:center" asp-page="./Edit" asp-route-id="@item.JobID">Edit</a>
                            <a class="link" style="background-color:red;color:white;display:block;margin:3px;text-align:center" asp-page="./Delete" asp-route-id="@item.JobID">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function displayAllChild(categoryID) {
        $.ajax({
            url: "https://localhost:7265/api/Job3API/GetAllChildCategory?parentId=" + categoryID,
            type: "get",
            contentType: "application/json",
            success: function(result, status, xhr){
                var str1 = "<tr id=\"ch_" + categoryID + "\"><td colspan=\"3\" style=\"width:100%;padding-right:0px;padding-left:10px\"><table style=\"width:100%;padding-right:0px\" >";
                var str2 = "";
                $.each(result, function (index, value) {
                    str2 += "<tr id=\"tr_" + value["categoryID"] + "\" style=\"width:100%\"><td style=\"text-align:right;width:20%\"> <input type=\"checkbox\" name = \"checkbox_" + value["categoryID"] + "\" value = \"" + value["categoryID"] + "\"> </td><td style=\"text-align:left;width:60%;white-space: nowrap;\">" + value["categoryName"] + " (" + value["numberOfJob"] + ")</td>";
                    str2 += (value["hasChildCategory"] == true) ? "<td style=\"text-align:right;width:20%\"> <a id=\"tr_link_" + value["categoryID"] + "\" onclick=\"displayAllChild(" + value["categoryID"] + ")\" class=\"link2\" > V </a></td>" : "<td style=\"text-align:right;width:20%\"></td>";
                    str2 += "</tr>";
                });
                var str3 = "</table></td></tr>";
                var str = str1+str2+str3;
                document.getElementById("tr_" + categoryID).insertAdjacentHTML("afterend", str);
            }
        })
        document.getElementById("tr_link_" + categoryID).setAttribute("onClick", "removeAllChild(" + categoryID + ")");
        document.getElementById("tr_link_" + categoryID).style["color"] = "red";
        document.getElementById("tr_link_" + categoryID).innerText = "Λ";
    }
    function removeAllChild(categoryID){
        document.getElementById("ch_" + categoryID).outerHTML = "";
        document.getElementById("tr_link_" + categoryID).setAttribute("onClick", "displayAllChild(" + categoryID + ")");
        document.getElementById("tr_link_" + categoryID).style["color"] = "#0a58ca";
        document.getElementById("tr_link_" + categoryID).innerText = "V";
    }
</script>
<script>
    $('input[name="daterange"]').daterangepicker();
</script>

<script>
    document.getElementById("price-min").addEventListener('change', function () {
        // Get the input element
        var input = document.getElementById("price-min");
        var input1 = input.value.replaceAll(",", "");
        input1 = input1.replaceAll("đ", "");
        input1 = input1.replaceAll(" ", "");
        // Get the value and convert it to a number
        var value = parseFloat(input1);
        // Check if the value is a valid number
        if (!isNaN(value)) {
            // Format the number with dots for thousands separator
            var formattedValue = value.toLocaleString('en', { maximumFractionDigits: 0 }) + " đ";

            // Update the input field with the formatted value
            input.value = formattedValue;
        }
    }, false);
</script>
<script>
    document.getElementById("price-max").addEventListener('change', function () {
        // Get the input element
        var input = document.getElementById("price-max");
        var input1 = input.value.replaceAll(",", "");
         input1 = input1.replaceAll("đ", "");
         input1 = input1.replaceAll(" ", "");
        // Get the value and convert it to a number
        var value = parseFloat(input1);
        // Check if the value is a valid number
        if (!isNaN(value)) {
            // Format the number with dots for thousands separator
            var formattedValue = value.toLocaleString('en', { maximumFractionDigits: 0 }) + " đ";

            // Update the input field with the formatted value
            input.value = formattedValue;
        }
    }, false);
</script>