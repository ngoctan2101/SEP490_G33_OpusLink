@page
@using OpusLink.Entity.DTO.JobDTO;
@using OpusLink.Entity.Models;
@using OpusLink.Shared.Enums;
@model OpusLink.Admin.Hosted.Pages.JOB.AdminViewDetailJobPageModel
@{
}
@{
    GetJobDetailResponse item = Model.job;
}
@{
    ViewData["Title"] = "Admin Detail Job";
}
<style>

    .link {
        text-decoration: none;
        font-weight: bold;
    }

        .link:hover {
            cursor: pointer;
        }

    .status {
        font-weight: bold;
        color: white;
        text-align: center;
        display: inline-block;
    }

    .category {
        display: inline-block;
        margin-bottom: 3px;
        background-color: lightblue;
        padding: 7px;
        border-radius: 5px;
        font-size: 14px;
    }

    .categoryFake {
        display: inline-block;
        margin-bottom: 3px;
        background-color: lightblue;
        padding: 7px;
        border-radius: 5px;
        font-size: 14px;
        opacity: 0.6;
    }

        .categoryFake:hover {
            cursor: pointer;
        }
    /*modal*/
    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 0;
        border: 1px solid #888;
        width: 50%;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
        -webkit-animation-name: animatetop;
        -webkit-animation-duration: 0.4s;
        animation-name: animatetop;
        animation-duration: 0.4s
    }

    /* Add Animation */
    @@-webkit-keyframes animatetop {
        from {
            top: -300px;
            opacity: 0
        }

        to {
            top: 0;
            opacity: 1
        }
    }

    @@keyframes animatetop {
        from {
            top: -300px;
            opacity: 0
        }

        to {
            top: 0;
            opacity: 1
        }
    }

    /* The Close Button */
    .close {
        color: white;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

    .modal-header {
        padding: 2px 16px;
        background-color: #2DB964;
        color: white;
    }

    .modal-body {
        padding: 2px 16px;
    }

    .buttonEdit:hover {
        background-color: #1B6ABE;
        color: white !important;
    }

    .buttonDelete:hover {
        background-color: #CD2000;
        color: white !important;
    }

    #countdown {
        font-size: 24px;
        font-weight: bold;
    }
</style>
<div id="ConfirmDeleteModal" class="modal">
    <!-- Modal delete -->
    <div class="modal-content" style="width:fit-content">
        <div class="modal-header">
            <h2 style="font-size:24px">Delete job</h2>
            <span class="close">&times;</span>
        </div>
        <div class="modal-body">
            <form method="post">
                <table>
                    <tr>
                        <td colspan="2">
                            Bạn có thực sự muốn xóa job này ?
                        </td>
                    </tr>
                    <tr>
                        <td>
                            ID:
                        </td>
                        <td>
                            <input type="text" name="DeleteJobID" readonly />
                        </td>
                    </tr>
                    <tr>
                        <td style="text-align:center"><button type="submit" asp-page-handler="ForDelete" style="background-color:#2DB964;color:white;border:2px solid #2DB964;width:120px">Có</button></td>
                        <td style="text-align:center"><button type="button" onclick="hideModal()" style="background-color:#CCCCCC; color:white;width:120px;border:2px solid #CCCCCC">Không</button></td>
                    </tr>
                </table>
            </form>
        </div>
    </div>
</div>
<div style="margin:10px 10px 10px 10px">
    <div style="display:inline-block;text-align:center;position: relative;width:100%;height:50px">
        <a href="../JOB/AdminViewAllJobPage" style="position: absolute;top: 50%;left: 0px;">Back to list</a>
        @*<button asp-page="./AdminEditJobPage" asp-route-JobId="@item.JobId" class="buttonEdit" style="width:50px;box-shadow: 0px 0px 1px 1px #1B6ABE;color: #1B6ABE;border: none; border-radius:2px;position: absolute;height:30px;bottom:0px;right: 10px;text-decoration: none;">✎</button>
        <button type="button" class="buttonDelete" id="openDeleteConfirmBox" onclick="OpenDeleteJob(@item.JobId)" style="width:50px;box-shadow: 0px 0px 1px 1px #CD2000;color: #CD2000;border: none; border-radius:2px;position: absolute;height:30px;bottom:0px;right: 150px;text-decoration: none;">X</button>*@
    </div>
    <div class="row">
        <div class="col-md-3">
            @{
                if (item.EmployerImageBytes != null && item.EmployerImageBytes.Length > 0)
                {
                    var base64Image = Convert.ToBase64String(item.EmployerImageBytes);
                    var imgSrc = $"data:image/png;base64,{base64Image}";
                    <img id="profileImage" src="@imgSrc" style="width:50%;height:auto;display:block" />
                }
                else
                {
                    <img id="profileImage" src="/img/default.png" style="width:50%;height:auto;display:block;margin-bottom:10px" />
                }
            } 
            <a asp-page="../ManageUser/UserDetail" asp-route-id="@item.EmployerId" class="link" style="display:block; font-size:25px">@item.EmployerName</a>
            ⭐⭐⭐⭐⭐
            <p style="font-weight:bold">Thông tin job:</p>
            <table style="width:100%;font-size:13px">
                <tr><td>Job Id:</td><td>@item.JobId</td></tr>
                <tr><td style="width:100px">Ngày đăng:</td><td>@item.DateCreated.ToString("dd/MM/yyyy")</td></tr>
                <tr><td>Ngân sách:</td><td>@Math.Round(item.BudgetMin,0).ToString("#,##") ₫<span style="display:inline-block"> - </span>@Math.Round(item.BudgetMax,0).ToString("#,##") ₫</td></tr>
                <tr><td>Địa điểm:</td><td>@item.Location</td></tr>
            </table>
        </div>
        <div class="col-md-9">
            <div>
                <p style="font-weight:bold;display:inline-block">@item.JobTitle</p>
                @if (item.Status == (int)JobStatusEnum.NotApprove)
                {
                    <p class="status" style="background-color:grey;margin:0px;padding:0px 4px 0px 4px">Not Approved</p>
                }
                else if (item.Status == (int)JobStatusEnum.Hiring)
                {
                    if (item.EndHiringDate < DateTime.Now)
                    {
                        <p class="status" style="background-color:#B5681C;margin:0px;padding:0px 4px 0px 4px">Hiring expried</p>
                    }
                    else
                    {
                        <p class="status" style="background-color:#00A424;margin:0px;padding:0px 4px 0px 4px">Hiring</p> <span style="color:red;font-size:13px" id="countdown_@item.JobId"></span>
                    }
                }
                else if (item.Status == (int)JobStatusEnum.Hired)
                {
                    <p class="status" style="background-color:orange;margin:0px;padding:0px 4px 0px 4px">Hired</p>
                }
                else if (item.Status == (int)JobStatusEnum.Completed)
                {
                    <p class="status" style="background-color:#FF0000;margin:0px;padding:0px 4px 0px 4px">Closed</p>
                }
                else if (item.Status == (int)JobStatusEnum.Failed)
                {
                    <p class="status" style="background-color:#FF0000;margin:0px;padding:0px 4px 0px 4px">Failed</p>
                }
            </div>
            <div class="row">
                <div class="col-md-2">
                    <p style="display:inline-block">Danh mục: </p>
                </div>
                <div class="col-md-10">
                    @if (item.Categories.Count > 4)
                    {
                        for (int i = 0; i < 4; i++)
                        {
                            <div class="category">@item.Categories.ElementAt(i).CategoryName</div>
                        }
                        <div name="hidden_fake_category_@item.JobId" class="categoryFake" onclick="DisplayAllCategory('@item.JobId')">. . .</div>
                        for (int i = 4; i < item.Categories.Count; i++)
                        {
                            <div name="hidden_category_@item.JobId" class="category" style="display: none;">@item.Categories.ElementAt(i).CategoryName</div>
                        }
                    }
                    else
                    {
                        foreach (GetCategoryResponse category in item.Categories)
                        {
                            <div class="category">@category.CategoryName</div>
                        }
                    }
                </div>
            </div>
            @*<p style="white-space: pre-line">@Html.Raw(item.JobContent.Replace("\r\n", "&#10;"))</p>*@
            <p style="white-space: pre-line;margin-top:10px">@item.JobContent</p>
            @if (item.TotalOffer > 0)
            {
                <div class="row">
                    <div class="col-md-4">Tổng số offer: @item.TotalOffer</div>
                    <div class="col-md-4">Số tiền offer trung bình: @Math.Round(item.AverageCost,0).ToString("#,##") ₫</div>
                    <div class="col-md-4">Thời lượng trung bình: @item.AverageTime ngày</div>
                </div>
            }
        </div>
    </div>
</div>
<script>
    function DisplayAllCategory(JobID) {
        document.getElementsByName('hidden_fake_category_' + JobID)[0].style.display = "none";
        var hiddenCategory = document.getElementsByName('hidden_category_' + JobID);
        hiddenCategory.forEach(function (hiddenCategory) {
            hiddenCategory.style.display = "inline-block";
        })
    }
</script>
<script>
    // Get the modal
    var modal = document.getElementById("ConfirmDeleteModal");

    // When the user clicks on <span> (x), close the modal
    document.getElementsByClassName("close")[0].onclick = function () {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
    function OpenDeleteJob(jobID) {
        document.getElementsByName("DeleteJobID")[0].value = jobID;
        modal.style.display = "block";
    }
    function hideModal() {
        modal.style.display = "none";
    }
</script>
<script>

    function startCountdown(endHiringDate, countdownId) {
        var countdownInterval = setInterval(function () {
            var now = new Date();
            var totalSeconds = Math.floor((endHiringDate - now) / 1000);
            var days = Math.floor(totalSeconds / (60 * 60 * 24));
            var hours = Math.floor((totalSeconds % (60 * 60 * 24)) / (60 * 60));
            var minutes = Math.floor((totalSeconds % (60 * 60)) / 60);
            var seconds = Math.floor((totalSeconds % (60)));
            document.getElementById(countdownId).innerHTML = "(" + days + "d " + hours + "h " + minutes + ":" + (seconds < 10 ? "0" : "") + seconds + ")";
            if (totalSeconds < 0) {
                clearInterval(countdownInterval);
                document.getElementById(countdownId).innerHTML = "Hiring Expried";
            }
        }, 1000);
    }
    var x = new Date("@(Model.job.EndHiringDate.ToString("yyyy-MM-ddTHH:mm:ss"))");
    startCountdown(x, "countdown_" + @Model.job.JobId);
</script>
